{"version":3,"sources":["redux/sidebar-reducer.ts","redux/app-reducer.ts","redux/redux-store.ts","components/Header/Header.js","components/Header/HeaderContainer.js","components/Navigation/Navigation.js","components/App/App.js","index.js","redux/auth-reducer.ts","components/Navigation/Navigation.module.scss","components/App/App.module.scss","components/Header/Header.module.scss","redux/profile-reducer.ts","assets/preloader.svg","components/common/Preloader/Preloader.jsx","api/api.ts","redux/dialogs-reducer.ts","utils/object-helpers.js","redux/users-reducer.ts"],"names":["initialState","sidebarReducer","state","INITIALIZED_SUCCESS","initialized","appReducer","action","type","rootReducer","combineReducers","profilePage","profileReducer","dialogsPage","dialogsReducer","sidebar","usersPage","usersReducer","auth","authReducer","form","formReducer","app","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","Header","props","className","s","header","loginBlock","isAuth","login","onClick","logout","to","HeaderContainer","this","React","Component","connect","Navigation","nav","title","nav__item","ProfileContainer","lazy","DialogsContainer","UsersContainer","Login","App","catchAllUnhandledError","reason","promise","initializeApp","addEventListener","removeEventListener","content","fallback","path","element","Preloader","dispatch","getAuthUserData","Promise","all","then","ReactDOM","render","document","getElementById","SET_USER_DATA","GET_CAPTCHA_URL_SUCCESS","userId","email","captchaUrl","setAuthUserData","payload","getCaptchaUrlSuccess","a","authAPI","authMe","data","resultCode","ResultCodesEnum","Success","id","password","rememberMe","captcha","CaptchaIsRequired","getCaptchaUrl","message","messages","length","stopSubmit","_error","securityAPI","url","module","exports","ADD_POST","DELETE_POST","SET_USER_PROFILE","SET_STATUS","SAVE_PHOTO_SUCCESS","posts","likesCount","profile","status","newPostText","addPostActionCreater","setStatus","getUserProfile","profileAPI","getStatus","updateStatus","savePhoto","file","photos","saveProfile","getState","reject","newPost","filter","post","postId","src","preloader","instance","axios","create","withCredentials","baseURL","headers","usersAPI","getUsers","currentPage","pageSize","get","response","unfollow","delete","follow","newStatus","put","formData","FormData","append","SEND_MESSAGE","dialogs","name","sendMessageCreater","newMessageBody","body","updateObjectInArray","items","itemId","objPropName","newObjProps","map","u","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_COUNT","TOGGLE_IS_FETCHING","TOGGLE_IS_FOLLOWING_PROGRESS","users","totalUsersCount","isFetching","followingInProgress","actions","followSuccess","unfollowSuccess","setUsers","setCurrentPage","setTotalUsersCount","toggleIsFetching","toggleFollowingProgress","requestUsers","page","totalCount","followUnfollowFlow","apiMethod","actionCreator","bind","followed"],"mappings":"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","file":"static/js/main.1b72c5ad.chunk.js","sourcesContent":["let initialState = {}\r\ntype InitialStateType = typeof initialState\r\n\r\nconst sidebarReducer = (state = initialState, action: any): InitialStateType => {\r\n    return state;\r\n}\r\n\r\n\r\nexport default sidebarReducer;","import { ThunkAction } from 'redux-thunk';\r\nimport { getAuthUserData } from './auth-reducer';\r\nimport { AppStateType } from './redux-store';\r\n\r\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\r\n\r\nexport type InitialStateType = {\r\n    initialized: boolean\r\n}\r\n\r\nexport type InitializedSuccessActionType = {\r\n    type: typeof INITIALIZED_SUCCESS\r\n}\r\n\r\nlet initialState: InitialStateType = {\r\n    initialized: false,\r\n}\r\n\r\nconst appReducer = (state = initialState, action: AppReducerActionTypes): InitialStateType => {\r\n\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS:\r\n            return { ...state, initialized: true };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\ntype AppReducerActionTypes = InitializedSuccessActionType\r\n\r\nconst initializedSuccess = (): InitializedSuccessActionType => ({ type: INITIALIZED_SUCCESS })\r\n\r\ntype ThunkType = ThunkAction<Promise<void>, AppStateType, unknown, AppReducerActionTypes>\r\n\r\nexport const initializeApp = () => (dispatch: any) => {   //ТИПИЗАЦИЯ\r\n    let promise = dispatch(getAuthUserData())\r\n    Promise.all([promise]).then(() => {\r\n        dispatch(initializedSuccess())\r\n    })\r\n\r\n}\r\n\r\nexport default appReducer;","import { legacy_createStore as createStore, combineReducers, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport profileReducer from './profile-reducer';\r\nimport dialogsReducer from './dialogs-reducer';\r\nimport sidebarReducer from './sidebar-reducer';\r\nimport usersReducer from './users-reducer';\r\nimport authReducer from './auth-reducer';\r\nimport { reducer as formReducer } from 'redux-form';\r\nimport appReducer from './app-reducer';\r\n\r\nlet rootReducer = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer,\r\n})\r\n//@ts-ignore\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nlet store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)));\r\n// let store = createStore(rootReducer, applyMiddleware(thunk));\r\ntype PropertyTypes<T> = T extends { [key: string]: infer U } ? U : never\r\nexport type ActionsTypes<T extends { [key: string]: (...args: any[]) => any }> = ReturnType<PropertyTypes<T>>\r\ntype RootReducerType = typeof rootReducer\r\nexport type AppStateType = ReturnType<RootReducerType>\r\n\r\nexport default store;","import React from 'react';\r\nimport s from './Header.module.scss';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nfunction Header(props) {\r\n    return <div className={s.header}>\r\n        Шапка сайта\r\n        <div className={s.loginBlock}>\r\n            {props.isAuth\r\n                ? <div>{props.login} - <button onClick={props.logout}>LogOut</button></div>\r\n                : <NavLink to='/login'>Login</NavLink>\r\n            }\r\n\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport Header from './Header';\r\nimport { useSelector, useDispatch, connect } from 'react-redux';\r\nimport { logout } from '../../redux/auth-reducer';\r\n\r\nclass HeaderContainer extends React.Component {\r\n    render() {\r\n        return <Header {...this.props} />\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n        isAuth: state.auth.isAuth,\r\n        login: state.auth.login,\r\n});\r\n\r\nexport default connect(mapStateToProps, {  logout })(HeaderContainer);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n//  const HeaderContainer = (props) => {\r\n    //     const state = useSelector(state => state.auth)\r\n    //     const dispatch = useDispatch()\r\n    //     const setAuthUserDataDispatch = ({ id, email, login }) => dispatch(setAuthUserData(id, email, login))\r\n    \r\n    //     React.useEffect(() => {\r\n    //         axios\r\n    //             .get(`https://social-network.samuraijs.com/api/1.0/auth/me`, {\r\n    //                 withCredentials: true,\r\n    //             })\r\n    //             .then((response) => {\r\n    //                 setAuthUserDataDispatch(response.data.data)\r\n    //             });\r\n    //     }, [])\r\n    //     console.log('state', state);\r\n    //     return <Header {...props} state={state} setAuthUserDataDispatch={setAuthUserDataDispatch} />\r\n    \r\n    // }\r\n    \r\n    // export default HeaderContainer;","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport s from './Navigation.module.scss';\r\n\r\nfunction Navigation() {\r\n    return (\r\n        <div className={s.nav}>\r\n            <div className={s.title}> Навигационное меню </div>\r\n\r\n            <div className={s.nav__item}>\r\n                <NavLink to=\"/profile\">Profile</NavLink>\r\n            </div>\r\n            <div className={s.nav__item}>\r\n                <NavLink to=\"/dialogs\">Messages</NavLink>\r\n            </div>\r\n            <div className={s.nav__item}>\r\n                <NavLink to=\"/users\">Users</NavLink>\r\n            </div>\r\n\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Navigation;","import React, { lazy, Suspense } from 'react';\nimport s from './App.module.scss';\nimport HeaderContainer from '../Header/HeaderContainer';\nimport Navigation from '../Navigation/Navigation';\nimport { Route, Routes, Navigate } from 'react-router-dom';\nimport { connect } from 'react-redux'\nimport { initializeApp } from '../../redux/app-reducer';\nimport { Preloader } from '../common/Preloader/Preloader';\nconst ProfileContainer = lazy(() => import('../Profile/ProfileContainer'))\nconst DialogsContainer = lazy(() => import('../Dialogs/DialogsContainer'))\nconst UsersContainer = lazy(() => import('../Users/UsersContainer'))\nconst Login = lazy(() => import('../Login/Login'))\n\nclass App extends React.Component {\n  catchAllUnhandledError = (reason, promise) => {\n\n  }\n  componentDidMount() {\n    this.props.initializeApp()\n    window.addEventListener(\"unhandledrejection\", this.catchAllUnhandledError)\n  }\n  componentWillUnmount() {\n    window.removeEventListener(\"unhandledrejection\", this.catchAllUnhandledError)\n  }\n\n  render() {\n    if (!this.props.initialized) {\n      return <Preloader />\n    }\n    return (\n      <div className={s.App}>\n        <HeaderContainer />\n        <Navigation />\n\n        <div className={s.content}>\n          <Suspense fallback={<div>Loading...</div>}>\n            <Routes>\n              <Route path='/' element={<Navigate to={'/profile'} />} />\n              <Route path='/dialogs' element={<DialogsContainer />} />\n              <Route path='/profile' element={<ProfileContainer />} >\n                <Route path=':userId' element={<ProfileContainer />} />\n              </Route>\n              <Route path='/users' element={<UsersContainer />} />\n              <Route path='/login' element={<Login />} />\n              <Route path='/*' element={<div>404 NOT FOUND</div>} />\n            </Routes>\n          </Suspense>\n        </div>\n      </div>\n    );\n  }\n\n}\nconst mapStateToProps = (state) => ({\n  initialized: state.app.initialized,\n})\n\nexport default connect(mapStateToProps, { initializeApp })(App);\n","import store from './redux/redux-store';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App';\nimport { HashRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\n\n\nReactDOM.render(\n    // <BrowserRouter basename={process.env.PUBLIC_URL}>\n    <HashRouter>\n        <Provider store={store}>\n            <App />\n        </Provider>\n    </HashRouter>,\n    document.getElementById('root')\n);\n\n\n","import { stopSubmit } from 'redux-form';\r\nimport { ThunkAction } from 'redux-thunk';\r\nimport { authAPI, securityAPI, ResultCodesEnum } from '../api/api'\r\nimport { AppStateType } from './redux-store';\r\n\r\nconst SET_USER_DATA = 'SET_USER_DATA';\r\nconst GET_CAPTCHA_URL_SUCCESS = 'GET_CAPTCHA_URL_SUCCESS';\r\n\r\nexport type InitialStateType = {\r\n    userId: number | null\r\n    email: string | null\r\n    login: string | null\r\n    isAuth: boolean\r\n    captchaUrl: string | null\r\n}\r\n\r\nlet initialState: InitialStateType = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false,\r\n    captchaUrl: null,\r\n}\r\n\r\nconst authReducer = (state = initialState, action: AuthReducerActionTypes): InitialStateType => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n        case GET_CAPTCHA_URL_SUCCESS:\r\n            return { ...state, ...action.payload };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\ntype SetAuthUserDataActionType = {\r\n    type: typeof SET_USER_DATA\r\n    payload: SetAuthUserDataActionPayloadType\r\n}\r\ntype SetAuthUserDataActionPayloadType = {\r\n    userId: number | null\r\n    email: string | null\r\n    login: string | null\r\n    isAuth: boolean\r\n}\r\ntype GetCaptchaUrlSuccessActionType = {\r\n    type: typeof GET_CAPTCHA_URL_SUCCESS\r\n    payload: { captchaUrl: string }\r\n}\r\n\r\nexport type AuthReducerActionTypes = SetAuthUserDataActionType | GetCaptchaUrlSuccessActionType\r\n\r\nexport const setAuthUserData = (userId: number | null, email: string | null, login: string | null, isAuth: boolean): SetAuthUserDataActionType => (\r\n    { type: SET_USER_DATA, payload: { userId, email, login, isAuth } }\r\n)\r\nexport const getCaptchaUrlSuccess = (captchaUrl: string): GetCaptchaUrlSuccessActionType => (\r\n    { type: GET_CAPTCHA_URL_SUCCESS, payload: { captchaUrl } }\r\n)\r\n\r\ntype ThunkType = ThunkAction<Promise<void>, AppStateType, unknown, AuthReducerActionTypes>\r\n\r\nexport const getAuthUserData = (): ThunkType => async (dispatch) => {\r\n    const data = await authAPI.authMe()\r\n    if (data.resultCode === ResultCodesEnum.Success) {\r\n        const { id, login, email } = data.data;\r\n        dispatch(setAuthUserData(id, email, login, true));\r\n    }\r\n}\r\nexport const login = (email: string, password: string, rememberMe: boolean, captcha: any) => async (dispatch: any) => { //ТИПИЗАЦИЯ\r\n    const data = await authAPI.login(email, password, rememberMe, captcha)\r\n    if (data.resultCode === ResultCodesEnum.Success) {\r\n        dispatch(getAuthUserData())\r\n    } else {\r\n        if (data.resultCode === ResultCodesEnum.CaptchaIsRequired) {\r\n            dispatch(getCaptchaUrl())\r\n        }\r\n        const message = data.messages.length > 0 ? data.messages[0] : 'Some error'\r\n        const action = stopSubmit('login', { _error: message })\r\n        dispatch(action)\r\n    }\r\n}\r\nexport const logout = (): ThunkType => async (dispatch) => {\r\n    const response = await authAPI.logout()\r\n    if (response.data.resultCode === ResultCodesEnum.Success) {\r\n        dispatch(setAuthUserData(null, null, null, false));\r\n    }\r\n}\r\n\r\nexport const getCaptchaUrl = (): ThunkType => async (dispatch) => {\r\n    const data = await securityAPI.getCaptchaUrl()\r\n    const captchaUrl = data.url\r\n    dispatch(getCaptchaUrlSuccess(captchaUrl))\r\n}\r\n\r\nexport default authReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navigation_nav__2J0oM\",\"nav__item\":\"Navigation_nav__item__1NMZ9\",\"title\":\"Navigation_title__eaAEu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__2D-eb\",\"content\":\"App_content__1Z6Zu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1W_Jk\",\"loginBlock\":\"Header_loginBlock__3Ipvt\"};","import { stopSubmit } from 'redux-form';\r\nimport { ThunkAction } from 'redux-thunk';\r\nimport { profileAPI } from '../api/api'\r\nimport { PhotosType, PostsType, ProfileType } from '../types/types';\r\nimport { AppStateType } from './redux-store';\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst DELETE_POST = 'DELETE_POST';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_STATUS = 'SET_STATUS';\r\nconst SAVE_PHOTO_SUCCESS = 'SAVE_PHOTO_SUCCESS';\r\n\r\nexport type InitialStateType = {\r\n    posts: PostsType[]\r\n    profile: null | ProfileType\r\n    status: string\r\n    newPostText: string\r\n}\r\n\r\n\r\nlet initialState: InitialStateType = {\r\n    posts: [\r\n        { id: 1, message: 'Post1', likesCount: 12 },\r\n        { id: 2, message: 'Post2', likesCount: 34 },\r\n        { id: 3, message: 'Post3', likesCount: 52 },\r\n        { id: 4, message: 'Post4', likesCount: 42 },\r\n        { id: 5, message: 'Post5', likesCount: 18 },\r\n        { id: 6, message: 'Post6', likesCount: 62 },\r\n    ],\r\n    profile: null,\r\n    status: '',\r\n    newPostText: '',\r\n}\r\nconst profileReducer = (state = initialState, action: ProfileReducerActionTypes): InitialStateType => {\r\n    switch (action.type) {\r\n        case ADD_POST:\r\n            let newPost = {\r\n                id: 7,\r\n                message: action.payload.newPostText,\r\n                likesCount: 0\r\n            };\r\n            return { ...state, posts: [...state.posts, newPost], newPostText: '' };\r\n        case DELETE_POST:\r\n            return { ...state, posts: state.posts.filter(post => action.payload.postId !== post.id) }\r\n        case SET_USER_PROFILE:\r\n            return { ...state, profile: action.payload.profile }\r\n        case SET_STATUS:\r\n            return { ...state, status: action.payload.status }\r\n        case SAVE_PHOTO_SUCCESS:\r\n            return { ...state, profile: { ...state.profile, photos: action.payload.photos } as ProfileType } //Исправить\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport type AddPostActionCreaterActionType = {\r\n    type: typeof ADD_POST\r\n    payload: { newPostText: string }\r\n}\r\nexport type SetUserProfileActionType = {\r\n    type: typeof SET_USER_PROFILE\r\n    payload: { profile: ProfileType }\r\n}\r\nexport type SetStatusActionType = {\r\n    type: typeof SET_STATUS\r\n    payload: { status: string }\r\n}\r\nexport type DeletePostActionType = {\r\n    type: typeof DELETE_POST\r\n    payload: { postId: number }\r\n}\r\nexport type SavePhotoSuccessActionType = {\r\n    type: typeof SAVE_PHOTO_SUCCESS\r\n    payload: { photos: PhotosType }\r\n}\r\n\r\nexport type ProfileReducerActionTypes = AddPostActionCreaterActionType | SetUserProfileActionType | SetStatusActionType |\r\n    DeletePostActionType | SavePhotoSuccessActionType\r\n\r\nexport const addPostActionCreater = (newPostText: string): AddPostActionCreaterActionType => ({ type: ADD_POST, payload: { newPostText } })\r\nexport const setUserProfile = (profile: ProfileType): SetUserProfileActionType => ({ type: SET_USER_PROFILE, payload: { profile } })\r\nexport const setStatus = (status: string): SetStatusActionType => ({ type: SET_STATUS, payload: { status } })\r\nexport const deletePost = (postId: number): DeletePostActionType => ({ type: DELETE_POST, payload: { postId } })\r\nexport const savePhotoSuccess = (photos: PhotosType): SavePhotoSuccessActionType => ({ type: SAVE_PHOTO_SUCCESS, payload: { photos } })\r\n\r\ntype ThunkType = ThunkAction<Promise<void>, AppStateType, unknown, ProfileReducerActionTypes>\r\n\r\nexport const getUserProfile = (userId: number):ThunkType  => async (dispatch) => {\r\n    let data = await profileAPI.getUserProfile(userId)\r\n    dispatch(setUserProfile(data));\r\n}\r\nexport const getStatus = (userId: number):ThunkType => async (dispatch) => {\r\n    let data = await profileAPI.getStatus(userId)\r\n    dispatch(setStatus(data));\r\n}\r\nexport const updateStatus = (status: string):ThunkType => async (dispatch) => {\r\n    try {\r\n        let data = await profileAPI.updateStatus(status)\r\n        if (!data.resultCode) { dispatch(setStatus(status)) }\r\n    }\r\n    catch (error) { }\r\n}\r\nexport const savePhoto = (file: any):ThunkType => async (dispatch) => {\r\n    let data = await profileAPI.savePhoto(file)\r\n    if (!data.resultCode) { dispatch(savePhotoSuccess(data.data.photos)) }\r\n}\r\nexport const saveProfile = (profile: ProfileType) => async (dispatch: any, getState: any) => {  // ТИПИЗАЦИЯ\r\n    const userId = getState().auth.userId\r\n    let data = await profileAPI.saveProfile(profile)\r\n    if (!data.resultCode) {\r\n        dispatch(getUserProfile(userId))\r\n    } else {\r\n        dispatch(stopSubmit('edit-profile', { _error: data.messages[0] }))\r\n        return Promise.reject(data.messages[0])\r\n    }\r\n}\r\n\r\n\r\nexport default profileReducer;","export default __webpack_public_path__ + \"static/media/preloader.ea356991.svg\";","import React from \"react\";\r\nimport preloader from \"../../../assets/preloader.svg\";\r\n\r\nexport const Preloader = () => {\r\n    return (\r\n        <div>\r\n            <img src={preloader} />\r\n        </div>\r\n    );\r\n};\r\n","import axios from 'axios';\r\nimport { ProfileType } from '../types/types';\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: `https://social-network.samuraijs.com/api/1.0/`,\r\n    headers: {\r\n        \"API-KEY\": \"e82d0870-e644-47bb-8212-44d44c6489be\",\r\n    }\r\n})\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage = 1, pageSize = 10) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => response.data)\r\n    },\r\n    unfollow(userId: number) {\r\n        return instance.delete(`follow/` + userId)\r\n            .then(response => response.data)\r\n    },\r\n    follow(userId: number) {\r\n        return instance.post(`follow/` + userId)\r\n            .then(response => response.data)\r\n    }\r\n}\r\nexport enum ResultCodesEnum {\r\n    Success = 0,\r\n    Error = 1,\r\n    CaptchaIsRequired = 10,\r\n}\r\n\r\n\r\ntype AuthMeType = {\r\n    data: {\r\n        id: number\r\n        email: string\r\n        login: string\r\n    }\r\n    resultCode: ResultCodesEnum\r\n    messages: Array<string>\r\n}\r\ntype LoginResponseType = {\r\n    data: {\r\n        userId: number\r\n    }\r\n    resultCode: ResultCodesEnum\r\n    messages: Array<string>\r\n}\r\n\r\nexport const authAPI = {\r\n    authMe() {\r\n        return instance.get<AuthMeType>(`auth/me`)\r\n            .then(response => response.data)\r\n    },\r\n    login(email: string, password: string, rememberMe = false, captcha: null | string = null) {\r\n        return instance.post<LoginResponseType>(`auth/login`, { email, password, rememberMe, captcha })\r\n            .then(response => response.data)\r\n    },\r\n    logout() {\r\n        return instance.delete(`auth/login`)\r\n    },\r\n}\r\n\r\nexport const profileAPI = {\r\n    getUserProfile(userId: number) {\r\n        return instance.get(`profile/` + userId)\r\n            .then(response => response.data)\r\n    },\r\n    getStatus(userId: number) {\r\n        return instance.get(`profile/status/` + userId)\r\n            .then(response => response.data)\r\n    },\r\n    updateStatus(newStatus: string) {\r\n        return instance.put(`profile/status`, { status: newStatus })\r\n            .then(response => response.data)\r\n    },\r\n    savePhoto(file: any) {\r\n        const formData = new FormData()\r\n        formData.append('image', file)\r\n        return instance.put(`profile/photo`, formData, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        })\r\n            .then(response => response.data)\r\n    },\r\n    saveProfile(profile: ProfileType) {\r\n        return instance.put(`profile`, profile)\r\n            .then(response => response.data)\r\n    },\r\n}\r\n\r\nexport const securityAPI = {\r\n    getCaptchaUrl() {\r\n        return instance.get(`security/get-captcha-url`)\r\n            .then(response => response.data)\r\n    },\r\n}\r\n\r\n\r\n","const SEND_MESSAGE = 'SEND_MESSAGE';\r\n\r\nexport type InitialStateType = {\r\n    dialogs: InitialStateDialogsType[]\r\n    messages: InitialStateMessagesType[]\r\n}\r\ntype InitialStateDialogsType = {\r\n    id: number\r\n    name: string\r\n}\r\ntype InitialStateMessagesType = {\r\n    id: number\r\n    message: string\r\n}\r\nlet initialState = {\r\n    dialogs: [\r\n        { id: 1, name: 'Viktor' },\r\n        { id: 2, name: 'Sveta' },\r\n        { id: 3, name: 'Igor' },\r\n        { id: 4, name: 'Masha' },\r\n        { id: 5, name: 'Petya' },\r\n        { id: 6, name: 'Viсtoria' }\r\n    ],\r\n    messages: [\r\n        { id: 1, message: 'Hi' },\r\n        { id: 2, message: 'Bye' },\r\n        { id: 3, message: 'Hello' },\r\n        { id: 4, message: 'Mess' },\r\n        { id: 5, message: 'Mess123' },\r\n        { id: 6, message: 'Mess456' },\r\n    ],\r\n}\r\n\r\nconst dialogsReducer = (state = initialState, action: DialogsReducerActionTypes): InitialStateType => {\r\n\r\n    switch (action.type) {\r\n        case SEND_MESSAGE:\r\n            let body = action.payload.newMessageBody;\r\n            return { ...state, messages: [...state.messages, { id: 7, message: body }] };\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\nexport const sendMessageCreater = (newMessageBody: string): SendMessageCreaterActionType => ({ type: SEND_MESSAGE, payload: { newMessageBody } })\r\n\r\nexport type SendMessageCreaterActionType = {\r\n    type: typeof SEND_MESSAGE\r\n    payload: { newMessageBody: string }\r\n}\r\n\r\nexport type DialogsReducerActionTypes = SendMessageCreaterActionType\r\nexport default dialogsReducer;","export const updateObjectInArray = (items, itemId, objPropName, newObjProps) => {\r\n    return items.map(u => {\r\n        if (u[objPropName] === itemId) {\r\n            return { ...u, ...newObjProps }\r\n        }\r\n        return u\r\n    })\r\n}\r\n\r\n","import { Dispatch } from 'redux';\r\nimport { ThunkAction } from 'redux-thunk';\r\nimport { usersAPI } from '../api/api'\r\nimport { PhotosType, UserType } from '../types/types';\r\nimport { updateObjectInArray } from '../utils/object-helpers';\r\nimport { ActionsTypes, AppStateType } from './redux-store';\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_COUNT = 'SET_TOTAL_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\r\n\r\ntype InitialStateType = typeof initialState\r\nexport type UserReducerActionsTypes = ActionsTypes<typeof actions>\r\ntype ThunkType = ThunkAction<Promise<void>, AppStateType, unknown, UserReducerActionsTypes>\r\n\r\n\r\nlet initialState = {\r\n    users: [] as Array<UserType>,\r\n    pageSize: 10,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followingInProgress: [] as Array<number>, //array os users ids\r\n}\r\n\r\nconst usersReducer = (state = initialState, action: UserReducerActionsTypes): InitialStateType => {\r\n\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            // return { ...state, users: state.users.map(item => item.id === action.payload.id ? { ...item, followed: true } : item) };\r\n            return { ...state, users: updateObjectInArray(state.users, action.payload.id, 'id', { followed: true }) };\r\n        case UNFOLLOW:\r\n            // return { ...state, users: state.users.map(item => item.id === action.payload.id ? { ...item, followed: false } : item) };\r\n            return { ...state, users: updateObjectInArray(state.users, action.payload.id, 'id', { followed: false }) };\r\n        case SET_USERS:\r\n            return { ...state, users: action.payload.users };\r\n        case SET_CURRENT_PAGE:\r\n            return { ...state, currentPage: action.payload.currentPage }\r\n        case SET_TOTAL_COUNT:\r\n            return { ...state, totalUsersCount: action.payload.totalUsersCount }\r\n        case TOGGLE_IS_FETCHING:\r\n            return { ...state, isFetching: action.payload.isFetching }\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS:\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter((id) => id !== action.userId)\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\nexport const actions = {\r\n    followSuccess: (id: number) => ({ type: FOLLOW, payload: { id } } as const),\r\n    unfollowSuccess: (id: number) => ({ type: UNFOLLOW, payload: { id } } as const),\r\n    setUsers: (users: UserType[]) => ({ type: SET_USERS, payload: { users } } as const),\r\n    setCurrentPage: (currentPage: number) => ({ type: SET_CURRENT_PAGE, payload: { currentPage } } as const),\r\n    setTotalUsersCount: (totalUsersCount: number) => ({ type: SET_TOTAL_COUNT, payload: { totalUsersCount } } as const),\r\n    toggleIsFetching: (isFetching: boolean) => ({ type: TOGGLE_IS_FETCHING, payload: { isFetching } } as const),\r\n    toggleFollowingProgress: (isFetching: boolean, userId: number) => ({ type: TOGGLE_IS_FOLLOWING_PROGRESS, isFetching, userId } as const),\r\n}\r\n\r\nexport const requestUsers = (page: number, pageSize: number): ThunkType => async (dispatch) => {\r\n    dispatch(actions.toggleIsFetching(true));\r\n    dispatch(actions.setCurrentPage(page));\r\n    const data = await usersAPI\r\n        .getUsers(page, pageSize)\r\n    dispatch(actions.toggleIsFetching(false));\r\n    dispatch(actions.setUsers(data.items));\r\n    dispatch(actions.setTotalUsersCount(data.totalCount));\r\n}\r\nconst followUnfollowFlow = async (dispatch: Dispatch<UserReducerActionsTypes>, userId: number, apiMethod: any, actionCreator: (userId: number) => UserReducerActionsTypes) => {\r\n    dispatch(actions.toggleFollowingProgress(true, userId));\r\n    const data = await apiMethod(userId)\r\n    !data.resultCode && dispatch(actionCreator(userId));\r\n    dispatch(actions.toggleFollowingProgress(false, userId));\r\n}\r\nexport const follow = (userId: number): ThunkType => async (dispatch) => {\r\n    let apiMethod = usersAPI.follow.bind(usersAPI)\r\n    let actionCreator = actions.followSuccess\r\n    followUnfollowFlow(dispatch, userId, apiMethod, actionCreator)\r\n}\r\nexport const unfollow = (userId: number): ThunkType => async (dispatch) => {\r\n    let apiMethod = usersAPI.unfollow.bind(usersAPI)\r\n    let actionCreator = actions.unfollowSuccess\r\n    followUnfollowFlow(dispatch, userId, apiMethod, actionCreator)\r\n}\r\n\r\nexport default usersReducer;\r\n\r\n"],"sourceRoot":""}