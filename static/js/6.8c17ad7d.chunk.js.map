{"version":3,"sources":["components/common/FormsControls/FormsControls.js","components/common/FormsControls/FormsControls.module.scss","utils/validators.js","components/Login/Login.module.scss","components/Login/Login.js"],"names":["FormControl","input","meta","children","hasError","touched","error","className","s","formControl","Textarea","props","Input","createField","placeholder","name","validators","component","text","validate","module","exports","required","value","undefined","maxLengthCreator","maxLength","length","LoginReduxForm","reduxForm","form","handleSubmit","captchaUrl","onSubmit","type","src","form__summaryError","connect","state","isAuth","auth","login","to","formData","email","password","rememberMe","captcha"],"mappings":"uUAIMA,EAAc,SAAC,GAAwC,EAAtCC,MAAuC,IAAhCC,EAA+B,EAA/BA,KAAMC,EAAyB,EAAzBA,SAC1BC,GADmD,iBACxCF,EAAKG,SAAWH,EAAKI,OACtC,OACI,sBAAKC,UAAWC,IAAEC,YAAc,KAAOL,EAAWI,IAAEF,MAAQ,IAA5D,UACI,8BACKH,IAEJC,GAAY,+BAAOF,EAAKI,YAKxBI,EAAW,SAAC,GAA+B,IAA7BT,EAA4B,EAA5BA,MAAOC,EAAqB,EAArBA,KAASS,EAAY,iBACnD,OACI,cAACX,EAAD,CAAaC,MAAOA,EAAOC,KAAMA,EAAjC,SAAuC,oDAAcD,GAAWU,OAI3DC,EAAQ,SAAC,GAA+B,IAA7BX,EAA4B,EAA5BA,MAAOC,EAAqB,EAArBA,KAASS,EAAY,iBAChD,OACI,cAACX,EAAD,CAAaC,MAAOA,EAAOC,KAAMA,EAAjC,SAAuC,iDAAWD,GAAWU,OAIxDE,EAAc,SAACC,EAAaC,EAAMC,EAAYC,GAAhC,IAA2CN,EAA3C,uDAAmD,GAAIO,EAAvD,uDAA8D,GAA9D,OACvB,gCACI,cAAC,IAAD,aAAOJ,YAAaA,EAAaC,KAAMA,EAAMI,SAAUH,EAAYC,UAAWA,GAAeN,IADjG,IAC4GO,O,oBC7BhHE,EAAOC,QAAU,CAAC,MAAQ,+B,iCCD1B,oEAAO,IAAMC,EAAW,SAACC,GACrB,OAAOA,OAAQC,EAAY,qBAGlBC,EAAmB,SAACC,GAAD,OAAe,SAACH,GAC5C,OAAQA,EAAMI,OAASD,EAAhB,wBAA8CA,EAA9C,iBAAoEF,K,oBCJ/EJ,EAAOC,QAAU,CAAC,mBAAqB,oC,iCCDvC,2FAuBMO,EAAiBC,YAAU,CAAEC,KAAM,SAAlBD,EAdL,SAAC,GAAyC,IAAvCE,EAAsC,EAAtCA,aAAczB,EAAwB,EAAxBA,MAAO0B,EAAiB,EAAjBA,WAEtC,OAAO,uBAAMC,SAAUF,EAAhB,UAEFlB,YAAY,QAAS,QAAS,CAACS,KAAWV,KAC1CC,YAAY,WAAY,WAAY,CAACS,KAAWV,IAAO,CAAEsB,KAAM,aAC/DrB,YAAY,KAAM,aAAc,GAAID,IAAO,CAAEsB,KAAM,YAAc,eACjEF,GAAc,qBAAKG,IAAKH,IACxBA,GAAcnB,YAAY,qBAAsB,UAAW,CAACS,KAAWV,KACvEN,GAAS,qBAAKC,UAAWC,IAAE4B,mBAAlB,SAAuC9B,IACjD,8BAAK,mDAwBE+B,uBALS,SAACC,GAAD,MAAY,CAChCC,OAAQD,EAAME,KAAKD,OACnBP,WAAYM,EAAME,KAAKR,cAGa,CAAES,WAA3BJ,EAlBD,SAAC,GAAmC,IAAjCI,EAAgC,EAAhCA,MAAOF,EAAyB,EAAzBA,OAAQP,EAAiB,EAAjBA,WAI5B,OAAIO,EACO,cAAC,IAAD,CAAUG,GAAI,aAElB,gCACH,uCACA,cAACd,EAAD,CAAgBK,SARH,SAACU,GACdF,EAAME,EAASC,MAAOD,EAASE,SAAUF,EAASG,WAAYH,EAASI,UAOnCf,WAAYA","file":"static/js/6.8c17ad7d.chunk.js","sourcesContent":["import React from 'react'\r\nimport s from './FormsControls.module.scss'\r\nimport { Field } from 'redux-form'\r\n\r\nconst FormControl = ({ input, meta, children, ...props }) => {\r\n    const hasError = meta.touched && meta.error\r\n    return (\r\n        <div className={s.formControl + \" \" + (hasError ? s.error : \"\")}>\r\n            <div>\r\n                {children}\r\n            </div>\r\n            {hasError && <span>{meta.error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea = ({ input, meta, ...props }) => {\r\n    return (\r\n        <FormControl input={input} meta={meta}><textarea {...input} {...props} /></FormControl>\r\n    )\r\n}\r\n\r\nexport const Input = ({ input, meta, ...props }) => {\r\n    return (\r\n        <FormControl input={input} meta={meta}><input {...input} {...props} /></FormControl>\r\n    )\r\n}\r\n\r\nexport const createField = (placeholder, name, validators, component, props = {}, text = '') => (\r\n    <div>\r\n        <Field placeholder={placeholder} name={name} validate={validators} component={component} {...props} /> {text}\r\n    </div>)","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"FormsControls_error__2LN0j\"};","export const required = (value) => {\r\n    return value ? undefined : 'Field is required';\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    return (value.length > maxLength) ? `Max length is ${maxLength} symbols` : undefined;\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form__summaryError\":\"Login_form__summaryError__1b8EM\"};","import React from \"react\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { createField, Input } from '../common/FormsControls/FormsControls';\r\nimport { required } from '../../utils/validators';\r\nimport { connect } from 'react-redux'\r\nimport { login } from '../../redux/auth-reducer';\r\nimport { Navigate } from \"react-router-dom\";\r\nimport s from \"./Login.module.scss\";\r\n\r\nconst LoginForm = ({ handleSubmit, error, captchaUrl }) => {\r\n\r\n    return <form onSubmit={handleSubmit}>\r\n\r\n        {createField(\"Email\", 'email', [required], Input)}\r\n        {createField('Password', 'password', [required], Input, { type: 'password' })}\r\n        {createField(null, 'rememberMe', [], Input, { type: 'checkbox' }, 'remember me')}\r\n        {captchaUrl && <img src={captchaUrl} />}\r\n        {captchaUrl && createField(\"Symbols from image\", 'captcha', [required], Input)}\r\n        {error && <div className={s.form__summaryError}>{error}</div>}\r\n        <div><button>Login</button></div>\r\n    </form>\r\n};\r\n\r\nconst LoginReduxForm = reduxForm({ form: 'login' })(LoginForm)\r\n\r\nconst Login = ({ login, isAuth, captchaUrl }) => {\r\n    const onSubmit = (formData) => {\r\n        login(formData.email, formData.password, formData.rememberMe, formData.captcha);\r\n    }\r\n    if (isAuth) {\r\n        return <Navigate to={'/profile'} />\r\n    }\r\n    return <div>\r\n        <h1>Login</h1>\r\n        <LoginReduxForm onSubmit={onSubmit} captchaUrl={captchaUrl} />\r\n    </div>;\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    captchaUrl: state.auth.captchaUrl\r\n})\r\n\r\nexport default connect(mapStateToProps, { login })(Login);\r\n"],"sourceRoot":""}