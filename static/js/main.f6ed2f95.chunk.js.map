{"version":3,"sources":["redux/sidebar-reducer.ts","redux/app-reducer.ts","redux/redux-store.ts","components/Header/Header.tsx","components/Header/HeaderContainer.tsx","components/Navigation/Navigation.tsx","components/App/App.tsx","index.tsx","api/auth-api.ts","api/security-api.ts","redux/auth-reducer.ts","components/Navigation/Navigation.module.scss","components/App/App.module.scss","components/Header/Header.module.scss","api/profile-api.ts","redux/profile-reducer.ts","assets/preloader.svg","components/common/Preloader/Preloader.tsx","redux/dialogs-reducer.ts","api/users-api.ts","utils/object-helpers.ts","redux/users-reducer.ts","api/api.ts"],"names":["initialState","sidebarReducer","state","INITIALIZED_SUCCESS","initialized","actions","type","appReducer","action","rootReducer","combineReducers","profilePage","profileReducer","dialogsPage","dialogsReducer","sidebar","usersPage","usersReducer","auth","authReducer","form","formReducer","app","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","Header","props","className","s","header","loginBlock","isAuth","login","onClick","logout","to","HeaderContainer","this","React","Component","connect","Navigation","nav","title","nav__item","ProfileContainer","lazy","DialogsContainer","UsersContainer","Login","App","catchAllUnhandledError","e","initializeApp","addEventListener","removeEventListener","content","fallback","path","element","Preloader","dispatch","promise","getAuthUserData","Promise","all","then","ReactDOM","render","document","getElementById","ResultCodesEnum","authAPI","instance","get","response","data","email","password","rememberMe","captcha","post","delete","securityAPI","SET_USER_DATA","GET_CAPTCHA_URL_SUCCESS","userId","captchaUrl","payload","a","resultCode","Success","id","CaptchaIsRequired","getCaptchaUrl","message","length","stopSubmit","_error","url","module","exports","profileAPI","newStatus","put","status","file","formData","FormData","append","headers","profile","ADD_POST","DELETE_POST","SET_USER_PROFILE","SET_STATUS","SAVE_PHOTO_SUCCESS","posts","likesCount","newPostText","addPostActionCreater","setUserProfile","setStatus","deletePost","postId","savePhotoSuccess","photos","getUserProfile","getStatus","updateStatus","savePhoto","saveProfile","getState","Error","reject","newPost","filter","src","preloader","SEND_MESSAGE","dialogs","name","messages","sendMessageCreater","newMessageBody","body","usersAPI","getUsers","currentPage","pageSize","unfollow","follow","updateObjectInArray","items","itemId","objPropName","newObjProps","map","u","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_COUNT","TOGGLE_IS_FETCHING","TOGGLE_IS_FOLLOWING_PROGRESS","users","totalUsersCount","isFetching","followingInProgress","followSuccess","unfollowSuccess","setUsers","setCurrentPage","setTotalUsersCount","toggleIsFetching","toggleFollowingProgress","requestUsers","page","totalCount","followUnfollowFlow","apiMethod","actionCreator","bind","followed","axios","create","withCredentials","baseURL"],"mappings":"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","file":"static/js/main.f6ed2f95.chunk.js","sourcesContent":["let initialState = {}\r\ntype InitialStateType = typeof initialState\r\n\r\nconst sidebarReducer = (state = initialState, action: any): InitialStateType => {\r\n    return state;\r\n}\r\n\r\n\r\nexport default sidebarReducer;","import { ThunkAction } from 'redux-thunk';\r\nimport { getAuthUserData } from './auth-reducer';\r\nimport { AppStateType } from './redux-store';\r\nimport {ActionsTypes} from './redux-store';\r\n\r\nconst INITIALIZED_SUCCESS = 'SN/APP/INITIALIZED_SUCCESS';\r\n\r\nexport type InitialStateType = typeof initialState\r\n\r\nexport type InitializedSuccessActionType = {\r\n    type: typeof INITIALIZED_SUCCESS\r\n}\r\n\r\nlet initialState = {\r\n    initialized: false,\r\n}\r\n\r\nconst appReducer = (state = initialState, action: AppReducerActionTypes): InitialStateType => {\r\n\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS:\r\n            return { ...state, initialized: true };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport const actions = {\r\n    initializedSuccess: () => ({ type: INITIALIZED_SUCCESS })\r\n}\r\ntype AppReducerActionTypes = ActionsTypes<typeof actions>\r\n\r\ntype ThunkType = ThunkAction<Promise<void>, AppStateType, unknown, AppReducerActionTypes>\r\n\r\nexport const initializeApp = () => (dispatch: any) => {   //ТИПИЗАЦИЯ\r\n    let promise = dispatch(getAuthUserData())\r\n    Promise.all([promise]).then(() => {\r\n        dispatch(actions.initializedSuccess())\r\n    })\r\n\r\n}\r\n\r\nexport default appReducer;","import { legacy_createStore as createStore, combineReducers, applyMiddleware, compose, Action } from 'redux';\r\nimport thunk, { ThunkAction } from 'redux-thunk';\r\nimport profileReducer from './profile-reducer';\r\nimport dialogsReducer from './dialogs-reducer';\r\nimport sidebarReducer from './sidebar-reducer';\r\nimport usersReducer from './users-reducer';\r\nimport authReducer from './auth-reducer';\r\nimport { reducer as formReducer } from 'redux-form';\r\nimport appReducer from './app-reducer';\r\n\r\nlet rootReducer = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer,\r\n})\r\n//@ts-ignore\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nlet store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)));\r\n// let store = createStore(rootReducer, applyMiddleware(thunk));\r\ntype PropertyTypes<T> = T extends { [key: string]: infer U } ? U : never\r\nexport type ActionsTypes<T extends { [key: string]: (...args: any[]) => any }> = ReturnType<PropertyTypes<T>>\r\ntype RootReducerType = typeof rootReducer\r\nexport type AppStateType = ReturnType<RootReducerType>\r\nexport type BaseThunkType<A extends Action, R = Promise<void>> = ThunkAction<R, AppStateType, unknown, A>\r\n\r\nexport default store;","import React from \"react\";\r\nimport s from \"./Header.module.scss\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nexport type MapPropsType = {\r\n    isAuth: boolean;\r\n    login: string | null\r\n};\r\nexport type DispatchPropsType = {\r\n    logout: () => void;\r\n};\r\nconst Header: React.FC<MapPropsType & DispatchPropsType> = (props) => {\r\n    return (\r\n        <div className={s.header}>\r\n            Шапка сайта\r\n            <div className={s.loginBlock}>\r\n                {props.isAuth ? (\r\n                    <div>\r\n                        {props.login} -{\" \"}\r\n                        <button onClick={props.logout}>LogOut</button>\r\n                    </div>\r\n                ) : (\r\n                    <NavLink to=\"/login\">Login</NavLink>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport Header, { MapPropsType, DispatchPropsType } from './Header';\r\nimport { useSelector, useDispatch, connect } from 'react-redux';\r\nimport { logout } from '../../redux/auth-reducer';\r\nimport { AppStateType } from '../../redux/redux-store';\r\n\r\nclass HeaderContainer extends React.Component<MapPropsType & DispatchPropsType> {\r\n    render() {\r\n        return <Header {...this.props} />\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state:AppStateType) => ({\r\n        isAuth: state.auth.isAuth,\r\n        login: state.auth.login,\r\n});\r\n\r\nexport default connect<MapPropsType,DispatchPropsType,{},AppStateType>(mapStateToProps, {  logout })(HeaderContainer);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n//  const HeaderContainer = (props) => {\r\n    //     const state = useSelector(state => state.auth)\r\n    //     const dispatch = useDispatch()\r\n    //     const setAuthUserDataDispatch = ({ id, email, login }) => dispatch(setAuthUserData(id, email, login))\r\n    \r\n    //     React.useEffect(() => {\r\n    //         axios\r\n    //             .get(`https://social-network.samuraijs.com/api/1.0/auth/me`, {\r\n    //                 withCredentials: true,\r\n    //             })\r\n    //             .then((response) => {\r\n    //                 setAuthUserDataDispatch(response.data.data)\r\n    //             });\r\n    //     }, [])\r\n    //     console.log('state', state);\r\n    //     return <Header {...props} state={state} setAuthUserDataDispatch={setAuthUserDataDispatch} />\r\n    \r\n    // }\r\n    \r\n    // export default HeaderContainer;","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport s from './Navigation.module.scss';\r\n\r\nconst Navigation:React.FC = () => {\r\n    return (\r\n        <div className={s.nav}>\r\n            <div className={s.title}> Навигационное меню </div>\r\n\r\n            <div className={s.nav__item}>\r\n                <NavLink to=\"/profile\">Profile</NavLink>\r\n            </div>\r\n            <div className={s.nav__item}>\r\n                <NavLink to=\"/dialogs\">Messages</NavLink>\r\n            </div>\r\n            <div className={s.nav__item}>\r\n                <NavLink to=\"/users\">Users</NavLink>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navigation;","import React, { lazy, Suspense } from \"react\";\nimport s from \"./App.module.scss\";\nimport HeaderContainer from \"../Header/HeaderContainer\";\nimport Navigation from \"../Navigation/Navigation\";\nimport { Route, Routes, Navigate } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { initializeApp } from \"../../redux/app-reducer\";\nimport { Preloader } from \"../common/Preloader/Preloader\";\nimport { AppStateType } from \"../../redux/redux-store\";\nconst ProfileContainer = lazy(() => import(\"../Profile/ProfileContainer\"));\nconst DialogsContainer = lazy(() => import(\"../Dialogs/DialogsContainer\"));\nconst UsersContainer = lazy(() => import(\"../Users/UsersContainer\"));\nconst Login = lazy(() => import(\"../Login/Login\"));\n\ntype MapPropsType = ReturnType<typeof mapStateToProps>;\ntype DispatchPropsType = {\n    initializeApp: () => void;\n};\n\nclass App extends React.Component<MapPropsType & DispatchPropsType> {\n    catchAllUnhandledError = (e: PromiseRejectionEvent) => {\n        // alert(\"Some error\");\n    };\n    componentDidMount() {\n        this.props.initializeApp();\n        window.addEventListener(\n            \"unhandledrejection\",\n            this.catchAllUnhandledError\n        );\n    }\n    componentWillUnmount() {\n        window.removeEventListener(\n            \"unhandledrejection\",\n            this.catchAllUnhandledError\n        );\n    }\n\n    render() {\n        if (!this.props.initialized) {\n            return <Preloader />;\n        }\n        return (\n            <div className={s.App}>\n                <HeaderContainer />\n                <Navigation />\n\n                <div className={s.content}>\n                    <Suspense fallback={<div>Loading...</div>}>\n                        <Routes>\n                            <Route\n                                path=\"/\"\n                                element={<Navigate to={\"/profile\"} />}\n                            />\n                            <Route\n                                path=\"/dialogs\"\n                                element={<DialogsContainer />}\n                            />\n                            <Route\n                                path=\"/profile\"\n                                element={<ProfileContainer />}\n                            >\n                                <Route\n                                    path=\":userId\"\n                                    element={<ProfileContainer />}\n                                />\n                            </Route>\n                            <Route path=\"/users\" element={<UsersContainer />} />\n                            <Route path=\"/login\" element={<Login />} />\n                            <Route\n                                path=\"/*\"\n                                element={<div> 404 NOT FOUND </div>}\n                            />\n                        </Routes>\n                    </Suspense>\n                </div>\n            </div>\n        );\n    }\n}\nconst mapStateToProps = (state: AppStateType) => ({\n    initialized: state.app.initialized,\n});\n\nexport default connect(mapStateToProps, { initializeApp })(App);\n","import store from './redux/redux-store';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App';\nimport { HashRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\n\n\nReactDOM.render(\n    // <BrowserRouter basename={process.env.PUBLIC_URL}>\n    <HashRouter>\n        <Provider store={store}>\n            <App />\n        </Provider>\n    </HashRouter>,\n    document.getElementById('root')\n);\n\n\n","import { instance, APIResponseType } from \"./api\"\r\n\r\nexport const authAPI = {\r\n    authMe() {\r\n        return instance.get<APIResponseType<MeResponseDataType>>(`auth/me`)\r\n            .then(response => response.data)\r\n    },\r\n    login(email: string, password: string, rememberMe = false, captcha: null | string = null) {\r\n        return instance.post<APIResponseType<LoginResponseDataType>>(`auth/login`, { email, password, rememberMe, captcha })\r\n            .then(response => response.data)\r\n    },\r\n    logout() {\r\n        return instance.delete(`auth/login`)\r\n    },\r\n}\r\n\r\ntype MeResponseDataType = {\r\n    id: number\r\n    email: string\r\n    login: string\r\n}\r\ntype LoginResponseDataType = {\r\n    userId: number\r\n}\r\n\r\nexport enum ResultCodesEnum {\r\n    Success = 0,\r\n    Error = 1,\r\n    CaptchaIsRequired = 10,\r\n}","import { instance } from \"./api\"\r\n\r\ntype GetCaptchaUrlResponseType = {\r\n    url:string\r\n}\r\n\r\nexport const securityAPI = {\r\n    getCaptchaUrl() {\r\n        return instance.get<GetCaptchaUrlResponseType>(`security/get-captcha-url`)\r\n            .then(response => response.data)\r\n    },\r\n}","import { Action } from 'redux';\r\nimport { stopSubmit } from 'redux-form';\r\nimport { ThunkAction } from 'redux-thunk';\r\nimport { authAPI, ResultCodesEnum } from '../api/auth-api'\r\nimport { securityAPI } from '../api/security-api'\r\nimport { AppStateType, ActionsTypes, BaseThunkType } from './redux-store';\r\n\r\nexport type InitialStateType = typeof initialState\r\nexport type AuthReducerActionTypes = ActionsTypes<typeof actions>\r\ntype ThunkTypeAuthReducer = BaseThunkType<AuthReducerActionTypes | ReturnType<typeof stopSubmit>>\r\n\r\nconst SET_USER_DATA = 'SN/AUTH/SET_USER_DATA';\r\nconst GET_CAPTCHA_URL_SUCCESS = 'SN/AUTH/GET_CAPTCHA_URL_SUCCESS';\r\n\r\nlet initialState = {\r\n    userId: null as (number | null),\r\n    email: null as string | null,\r\n    login: null as string | null,\r\n    isAuth: false,\r\n    captchaUrl: null as string | null\r\n}\r\n\r\nconst authReducer = (state = initialState, action: AuthReducerActionTypes): InitialStateType => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n        case GET_CAPTCHA_URL_SUCCESS:\r\n            return { ...state, ...action.payload };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const actions = {\r\n    setAuthUserData: (userId: number | null, email: string | null, login: string | null, isAuth: boolean) => (\r\n        { type: SET_USER_DATA, payload: { userId, email, login, isAuth } } as const\r\n    ),\r\n    getCaptchaUrlSuccess: (captchaUrl: string) => (\r\n        { type: GET_CAPTCHA_URL_SUCCESS, payload: { captchaUrl } } as const\r\n    )\r\n}\r\n\r\nexport const getAuthUserData = (): BaseThunkType<AuthReducerActionTypes> => async (dispatch) => {\r\n    const data = await authAPI.authMe()\r\n    if (data.resultCode === ResultCodesEnum.Success) {\r\n        const { id, login, email } = data.data;\r\n        dispatch(actions.setAuthUserData(id, email, login, true));\r\n    }\r\n}\r\nexport const login = (email: string, password: string, rememberMe: boolean, captcha: any): ThunkTypeAuthReducer => async (dispatch) => { \r\n    const data = await authAPI.login(email, password, rememberMe, captcha)\r\n    if (data.resultCode === ResultCodesEnum.Success) {\r\n        dispatch(getAuthUserData())\r\n    } else {\r\n        if (data.resultCode === ResultCodesEnum.CaptchaIsRequired) {\r\n            dispatch(getCaptchaUrl())\r\n        }\r\n        const message = data.message.length > 0 ? data.message[0] : 'Some error'  //messages => message\r\n        const action = stopSubmit('login', { _error: message })\r\n        dispatch(action)\r\n    }\r\n}\r\nexport const logout = (): BaseThunkType<AuthReducerActionTypes> => async (dispatch) => {\r\n    const response = await authAPI.logout()\r\n    if (response.data.resultCode === ResultCodesEnum.Success) {\r\n        dispatch(actions.setAuthUserData(null, null, null, false));\r\n    }\r\n}\r\n\r\nexport const getCaptchaUrl = (): BaseThunkType<AuthReducerActionTypes> => async (dispatch) => {\r\n    const data = await securityAPI.getCaptchaUrl()\r\n    const captchaUrl = data.url\r\n    dispatch(actions.getCaptchaUrlSuccess(captchaUrl))\r\n}\r\n\r\nexport default authReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navigation_nav__2J0oM\",\"nav__item\":\"Navigation_nav__item__1NMZ9\",\"title\":\"Navigation_title__eaAEu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__2D-eb\",\"content\":\"App_content__1Z6Zu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1W_Jk\",\"loginBlock\":\"Header_loginBlock__3Ipvt\"};","import { PhotosType, ProfileType } from \"../types/types\"\r\nimport { instance, APIResponseType } from \"./api\"\r\n\r\ntype SavePhotoResponseDataType = {\r\n    photos: PhotosType\r\n}\r\n\r\nexport const profileAPI = {\r\n    getUserProfile(userId: number) {\r\n        return instance.get<ProfileType>(`profile/` + userId)\r\n            .then(response => response.data)\r\n    },\r\n    getStatus(userId: number) {\r\n        return instance.get<string>(`profile/status/` + userId)\r\n            .then(response => response.data)\r\n    },\r\n    updateStatus(newStatus: string) {\r\n        return instance.put<APIResponseType>(`profile/status`, { status: newStatus })\r\n            .then(response => response.data)\r\n    },\r\n    savePhoto(file: any) {\r\n        const formData = new FormData()\r\n        formData.append('image', file)\r\n        return instance.put<APIResponseType<SavePhotoResponseDataType>>(`profile/photo`, formData, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        })\r\n            .then(response => response.data)\r\n    },\r\n    saveProfile(profile: ProfileType) {\r\n        return instance.put<APIResponseType>(`profile`, profile)\r\n            .then(response => response.data)\r\n    },\r\n}","import { stopSubmit } from 'redux-form';\r\nimport { ThunkAction } from 'redux-thunk';\r\nimport { profileAPI } from '../api/profile-api'\r\nimport { PhotosType, PostsType, ProfileType } from '../types/types';\r\nimport { ActionsTypes, AppStateType, BaseThunkType } from './redux-store';\r\n\r\nconst ADD_POST = 'SN/PROFILE/ADD-POST';\r\nconst DELETE_POST = 'SN/PROFILE/DELETE_POST';\r\nconst SET_USER_PROFILE = 'SN/PROFILE/SET_USER_PROFILE';\r\nconst SET_STATUS = 'SN/PROFILE/SET_STATUS';\r\nconst SAVE_PHOTO_SUCCESS = 'SN/PROFILE/SAVE_PHOTO_SUCCESS';\r\n\r\nexport type InitialStateType = typeof initialState\r\nexport type ProfileReducerActionTypes = ActionsTypes<typeof actions>\r\ntype ThunkTypeProfileReducer = BaseThunkType<ProfileReducerActionTypes | ReturnType<typeof stopSubmit>>\r\n\r\nlet initialState = {\r\n    posts: [\r\n        { id: 1, message: 'Post1', likesCount: 12 },\r\n        { id: 2, message: 'Post2', likesCount: 34 },\r\n        { id: 3, message: 'Post3', likesCount: 52 },\r\n        { id: 4, message: 'Post4', likesCount: 42 },\r\n        { id: 5, message: 'Post5', likesCount: 18 },\r\n        { id: 6, message: 'Post6', likesCount: 62 },\r\n    ] as PostsType[],\r\n    profile: null as null | ProfileType,\r\n    status: '',\r\n    newPostText: '',\r\n}\r\nconst profileReducer = (state = initialState, action: ProfileReducerActionTypes): InitialStateType => {\r\n    switch (action.type) {\r\n        case ADD_POST:\r\n            let newPost = {\r\n                id: 7,\r\n                message: action.payload.newPostText,\r\n                likesCount: 0\r\n            };\r\n            // return { ...state, posts: [...state.posts, newPost]};\r\n            return { ...state, posts: [...state.posts, newPost], newPostText: '' };\r\n        case DELETE_POST:\r\n            return { ...state, posts: state.posts.filter(post => action.payload.postId !== post.id) }\r\n        case SET_USER_PROFILE:\r\n            return { ...state, profile: action.payload.profile }\r\n        case SET_STATUS:\r\n            return { ...state, status: action.payload.status }\r\n        case SAVE_PHOTO_SUCCESS:\r\n            return { ...state, profile: { ...state.profile, photos: action.payload.photos } as ProfileType } //Исправить\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const actions = {\r\n    addPostActionCreater: (newPostText: string) => ({ type: ADD_POST, payload: { newPostText } }) as const,\r\n    setUserProfile: (profile: ProfileType) => ({ type: SET_USER_PROFILE, payload: { profile } }) as const,\r\n    setStatus: (status: string) => ({ type: SET_STATUS, payload: { status } }) as const,\r\n    deletePost: (postId: number) => ({ type: DELETE_POST, payload: { postId } }) as const,\r\n    savePhotoSuccess: (photos: PhotosType) => ({ type: SAVE_PHOTO_SUCCESS, payload: { photos } }) as const,\r\n}\r\n\r\nexport const getUserProfile = (userId: number): BaseThunkType<ProfileReducerActionTypes> => async (dispatch) => {\r\n    let data = await profileAPI.getUserProfile(userId)\r\n    dispatch(actions.setUserProfile(data));\r\n}\r\nexport const getStatus = (userId: number): BaseThunkType<ProfileReducerActionTypes> => async (dispatch) => {\r\n    let data = await profileAPI.getStatus(userId)\r\n    dispatch(actions.setStatus(data));\r\n}\r\nexport const updateStatus = (status: string): BaseThunkType<ProfileReducerActionTypes> => async (dispatch) => {\r\n    try {\r\n        let data = await profileAPI.updateStatus(status)\r\n        if (!data.resultCode) { dispatch(actions.setStatus(status)) }\r\n    }\r\n    catch (error) { }\r\n}\r\nexport const savePhoto = (file: any): BaseThunkType<ProfileReducerActionTypes> => async (dispatch) => {\r\n    let data = await profileAPI.savePhoto(file)\r\n    if (!data.resultCode) { dispatch(actions.savePhotoSuccess(data.data.photos)) }\r\n}\r\nexport const saveProfile = (profile: ProfileType): ThunkTypeProfileReducer => async (dispatch, getState) => {\r\n    const userId = getState().auth.userId\r\n    let data = await profileAPI.saveProfile(profile)\r\n    if (!data.resultCode) {\r\n        if (userId !== null) {\r\n            dispatch(getUserProfile(userId))\r\n        } else {\r\n            throw new Error(\"UserId can't be null\")\r\n        }\r\n    } else {\r\n        dispatch(stopSubmit('edit-profile', { _error: data.message[0] }))\r\n        return Promise.reject(data.message[0])\r\n    }\r\n}\r\n\r\nexport default profileReducer;","export default __webpack_public_path__ + \"static/media/preloader.ea356991.svg\";","import React from \"react\";\r\nimport preloader from \"../../../assets/preloader.svg\";\r\n\r\nexport const Preloader:React.FC = () => {\r\n    return (\r\n        <div>\r\n            <img src={preloader} />\r\n        </div>\r\n    );\r\n};\r\n","import { ActionsTypes } from \"./redux-store\";\r\n\r\nconst SEND_MESSAGE = 'SN/DIALOGS/SEND_MESSAGE';\r\n\r\nexport type InitialStateType = typeof initialState\r\n\r\nlet initialState = {\r\n    dialogs: [\r\n        { id: 1, name: 'Viktor' },\r\n        { id: 2, name: 'Sveta' },\r\n        { id: 3, name: 'Igor' },\r\n        { id: 4, name: 'Masha' },\r\n        { id: 5, name: 'Petya' },\r\n        { id: 6, name: 'Viсtoria' }\r\n    ],\r\n    messages: [\r\n        { id: 1, message: 'Hi' },\r\n        { id: 2, message: 'Bye' },\r\n        { id: 3, message: 'Hello' },\r\n        { id: 4, message: 'Mess' },\r\n        { id: 5, message: 'Mess123' },\r\n        { id: 6, message: 'Mess456' },\r\n    ],\r\n}\r\n\r\nconst dialogsReducer = (state = initialState, action: DialogsReducerActionTypes) => {\r\n\r\n    switch (action.type) {\r\n        case SEND_MESSAGE:\r\n            let body = action.payload.newMessageBody;\r\n            return { ...state, messages: [...state.messages, { id: 7, message: body }] };\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\nexport const actions = {\r\n    sendMessageCreater: (newMessageBody: string) => ({ type: SEND_MESSAGE, payload: { newMessageBody } } as const)\r\n}\r\n\r\nexport type DialogsReducerActionTypes = ActionsTypes<typeof actions>\r\nexport default dialogsReducer;","import { GetItemsType, instance, APIResponseType } from \"./api\"\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage = 1, pageSize = 10) {\r\n        return instance.get<GetItemsType>(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => response.data)\r\n    },\r\n    unfollow(userId: number) {\r\n        return instance.delete(`follow/` + userId)\r\n            .then(response => response.data) as Promise<APIResponseType>\r\n    },\r\n    follow(userId: number) {\r\n        return instance.post<APIResponseType>(`follow/` + userId)\r\n            .then(response => response.data)\r\n    }\r\n}","export const updateObjectInArray = (items: any, itemId: any, objPropName: any, newObjProps: any) => {\r\n    return items.map((u: any) => {\r\n        if (u[objPropName] === itemId) {\r\n            return { ...u, ...newObjProps }\r\n        }\r\n        return u\r\n    })\r\n}\r\n\r\n","import { Dispatch } from 'redux';\r\nimport { ThunkAction } from 'redux-thunk';\r\nimport { usersAPI } from '../api/users-api'\r\nimport { PhotosType, UserType } from '../types/types';\r\nimport { updateObjectInArray } from '../utils/object-helpers';\r\nimport { ActionsTypes, AppStateType, BaseThunkType } from './redux-store';\r\n\r\nconst FOLLOW = 'SN/USERS/FOLLOW';\r\nconst UNFOLLOW = 'SN/USERS/UNFOLLOW';\r\nconst SET_USERS = 'SN/USERS/SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SN/USERS/SET_CURRENT_PAGE';\r\nconst SET_TOTAL_COUNT = 'SN/USERS/SET_TOTAL_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'SN/USERS/TOGGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'SN/USERS/TOGGLE_IS_FOLLOWING_PROGRESS';\r\n\r\ntype InitialStateType = typeof initialState\r\nexport type UserReducerActionsTypes = ActionsTypes<typeof actions>\r\n\r\nlet initialState = {\r\n    users: [] as Array<UserType>,\r\n    pageSize: 10,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followingInProgress: [] as Array<number>, //array os users ids\r\n}\r\n\r\nconst usersReducer = (state = initialState, action: UserReducerActionsTypes): InitialStateType => {\r\n\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            // return { ...state, users: state.users.map(item => item.id === action.payload.id ? { ...item, followed: true } : item) };\r\n            return { ...state, users: updateObjectInArray(state.users, action.payload.id, 'id', { followed: true }) };\r\n        case UNFOLLOW:\r\n            // return { ...state, users: state.users.map(item => item.id === action.payload.id ? { ...item, followed: false } : item) };\r\n            return { ...state, users: updateObjectInArray(state.users, action.payload.id, 'id', { followed: false }) };\r\n        case SET_USERS:\r\n            return { ...state, users: action.payload.users };\r\n        case SET_CURRENT_PAGE:\r\n            return { ...state, currentPage: action.payload.currentPage }\r\n        case SET_TOTAL_COUNT:\r\n            return { ...state, totalUsersCount: action.payload.totalUsersCount }\r\n        case TOGGLE_IS_FETCHING:\r\n            return { ...state, isFetching: action.payload.isFetching }\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS:\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter((id) => id !== action.userId)\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\nexport const actions = {\r\n    followSuccess: (id: number) => ({ type: FOLLOW, payload: { id } } as const),\r\n    unfollowSuccess: (id: number) => ({ type: UNFOLLOW, payload: { id } } as const),\r\n    setUsers: (users: UserType[]) => ({ type: SET_USERS, payload: { users } } as const),\r\n    setCurrentPage: (currentPage: number) => ({ type: SET_CURRENT_PAGE, payload: { currentPage } } as const),\r\n    setTotalUsersCount: (totalUsersCount: number) => ({ type: SET_TOTAL_COUNT, payload: { totalUsersCount } } as const),\r\n    toggleIsFetching: (isFetching: boolean) => ({ type: TOGGLE_IS_FETCHING, payload: { isFetching } } as const),\r\n    toggleFollowingProgress: (isFetching: boolean, userId: number) => ({ type: TOGGLE_IS_FOLLOWING_PROGRESS, isFetching, userId } as const),\r\n}\r\n\r\nexport const requestUsers = (page: number, pageSize: number): BaseThunkType<UserReducerActionsTypes> => async (dispatch) => {\r\n    dispatch(actions.toggleIsFetching(true));\r\n    dispatch(actions.setCurrentPage(page));\r\n    const data = await usersAPI\r\n        .getUsers(page, pageSize)\r\n    dispatch(actions.toggleIsFetching(false));\r\n    dispatch(actions.setUsers(data.items));\r\n    dispatch(actions.setTotalUsersCount(data.totalCount));\r\n}\r\nconst followUnfollowFlow = async (dispatch: Dispatch<UserReducerActionsTypes>, userId: number, apiMethod: any, actionCreator: (userId: number) => UserReducerActionsTypes) => {\r\n    dispatch(actions.toggleFollowingProgress(true, userId));\r\n    const data = await apiMethod(userId)\r\n    !data.resultCode && dispatch(actionCreator(userId));\r\n    dispatch(actions.toggleFollowingProgress(false, userId));\r\n}\r\nexport const follow = (userId: number): BaseThunkType<UserReducerActionsTypes> => async (dispatch) => {\r\n    let apiMethod = usersAPI.follow.bind(usersAPI)\r\n    let actionCreator = actions.followSuccess\r\n    followUnfollowFlow(dispatch, userId, apiMethod, actionCreator)\r\n}\r\nexport const unfollow = (userId: number): BaseThunkType<UserReducerActionsTypes> => async (dispatch) => {\r\n    let apiMethod = usersAPI.unfollow.bind(usersAPI)\r\n    let actionCreator = actions.unfollowSuccess\r\n    followUnfollowFlow(dispatch, userId, apiMethod, actionCreator)\r\n}\r\n\r\nexport default usersReducer;\r\n\r\n","import axios from 'axios';\r\nimport { UserType } from '../types/types';\r\nimport { ResultCodesEnum } from './auth-api';\r\n\r\nexport const instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: `https://social-network.samuraijs.com/api/1.0/`,\r\n    headers: {\r\n        \"API-KEY\": \"e82d0870-e644-47bb-8212-44d44c6489be\",\r\n    }\r\n})\r\n\r\n\r\nexport type GetItemsType = {\r\n    items: Array<UserType>\r\n    totalCount: number\r\n    error: string | null\r\n}\r\n\r\nexport type APIResponseType<D = {}, RC = ResultCodesEnum> = {\r\n    data: D\r\n    message: Array<string>\r\n    resultCode: RC\r\n}\r\n\r\n\r\n\r\n"],"sourceRoot":""}