{"version":3,"sources":["utils/validators.js","components/common/FormsControls/FormsControls.js","components/common/FormsControls/FormsControls.module.scss","hoc/withAuthRedirect.js","components/Profile/MyPosts/Post/Post.module.scss","components/Profile/MyPosts/MyPosts.module.scss","components/Profile/ProfileInfo/ProfileInfo.module.scss","components/Profile/Profile.module.scss","components/Profile/MyPosts/Post/Post.js","components/Profile/MyPosts/MyPosts.js","components/Profile/MyPosts/MyPostsContainer.js","components/Profile/ProfileInfo/ProfileStatus.js","components/Profile/ProfileInfo/ProfileInfo.js","components/Profile/Profile.js","components/Profile/ProfileContainer.js"],"names":["required","value","undefined","maxLengthCreator","maxLength","length","FormControl","input","meta","children","hasError","touched","error","className","s","formControl","Textarea","props","Input","createField","placeholder","name","validators","component","text","validate","module","exports","mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","to","React","connect","Post","post","src","alt","message","likesCount","maxLength10","MyPosts","postsElements","posts","map","myPosts","AddNewPostFormRedux","onSubmit","values","addPost","newPostText","reduxForm","form","handleSubmit","Field","memo","MyPostsContainer","profilePage","dispatch","addPostActionCreater","ProfileStatus","useState","editMode","setEditMode","status","setStatus","useEffect","onChange","e","currentTarget","onBlur","updateStatus","autoFocus","onDoubleClick","ProfileInfo","profile","isOwner","savePhoto","Preloader","profileInfo","descriptionBlock","fullName","userId","photos","small","mainPhoto","type","target","files","descriptionBlock__aboutMe","aboutMe","descriptionBlock__status","Profile","ProfileContainer","router","params","getUserProfile","getStatus","refreshProfile","prevProps","compose","location","useLocation","navigate","useNavigate","useParams"],"mappings":"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","file":"static/js/4.6c443398.chunk.js","sourcesContent":["export const required = (value) => {\r\n    return value ? undefined : 'Field is required';\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    return (value.length > maxLength) ? `Max length is ${maxLength} symbols` : undefined;\r\n}","import React from 'react'\r\nimport s from './FormsControls.module.scss'\r\nimport { Field } from 'redux-form'\r\n\r\nconst FormControl = ({ input, meta, children, ...props }) => {\r\n    const hasError = meta.touched && meta.error\r\n    return (\r\n        <div className={s.formControl + \" \" + (hasError ? s.error : \"\")}>\r\n            <div>\r\n                {children}\r\n            </div>\r\n            {hasError && <span>{meta.error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea = ({ input, meta, ...props }) => {\r\n    return (\r\n        <FormControl input={input} meta={meta}><textarea {...input} {...props} /></FormControl>\r\n    )\r\n}\r\n\r\nexport const Input = ({ input, meta, ...props }) => {\r\n    return (\r\n        <FormControl input={input} meta={meta}><input {...input} {...props} /></FormControl>\r\n    )\r\n}\r\n\r\nexport const createField = (placeholder, name, validators, component, props = {}, text = '') => (\r\n    <div>\r\n        <Field placeholder={placeholder} name={name} validate={validators} component={component} {...props} /> {text}\r\n    </div>)","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"FormsControls_error__2LN0j\"};","import React from \"react\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Navigate to='/login' />\r\n\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__3g1Y5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"myPosts\":\"MyPosts_myPosts__rNwKc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__1kc_Z\",\"descriptionBlock__aboutMe\":\"ProfileInfo_descriptionBlock__aboutMe__3eZD3\",\"descriptionBlock__status\":\"ProfileInfo_descriptionBlock__status__362G7\",\"mainPhoto\":\"ProfileInfo_mainPhoto__3Th4m\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"myProfile__photo\":\"Profile_myProfile__photo__26Xkt\"};","import React from \"react\";\r\nimport s from './Post.module.scss';\r\n\r\nfunction Post(props) {\r\n    return (\r\n        <div className={s.post}>\r\n            <img src='https://get.wallhere.com/photo/1600x1200-px-boxes-Danbo-eyes-fallen-glowing-leaves-1629619.jpg' alt='ava' />\r\n            Post: {props.message}\r\n            <div>\r\n                <span> Like {props.likesCount}</span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post;","import React from \"react\";\r\nimport Post from \"./Post/Post\";\r\nimport s from \"./MyPosts.module.scss\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { required, maxLengthCreator } from '../../../utils/validators'\r\nimport { Textarea } from \"../../common/FormsControls/FormsControls\";\r\n\r\nconst maxLength10 = maxLengthCreator(10)\r\n\r\nconst MyPosts = (props) => {\r\n  let postsElements = props.posts.map((post) => (\r\n    <Post message={post.message} likesCount={post.likesCount} />\r\n  ));\r\n\r\n  // let newPostElement = React.createRef();\r\n\r\n  let onAddPost = (values) => {\r\n    props.addPost(values.newPostText);\r\n  };\r\n\r\n  return (\r\n    <div className={s.myPosts}>\r\n      <h3>My posts</h3>\r\n      <AddNewPostFormRedux onSubmit={onAddPost} />\r\n      {postsElements}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst AddNewPostForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <Field component={Textarea} name={'newPostText'} validate={[required, maxLength10]} placeholder={'Post message'} />\r\n      <button>Add</button>\r\n      <button>Delete</button>\r\n    </form>\r\n  )\r\n}\r\n\r\nconst AddNewPostFormRedux = reduxForm({ form: 'ProfileAddNewPostForm' })(AddNewPostForm)\r\n\r\nexport default React.memo(MyPosts);\r\n","import React from \"react\";\r\nimport { addPostActionCreater } from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport { connect } from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    posts: state.profilePage.posts,\r\n    newPostText: state.profilePage.newPostText,\r\n  }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addPost: (newPostText) => dispatch(addPostActionCreater(newPostText)),\r\n  }\r\n}\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\r\n\r\nexport default MyPostsContainer;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\n\r\nconst ProfileStatus = (props) => {\r\n  const [editMode, setEditMode] = useState(false)\r\n  const [status, setStatus] = useState(props.status)\r\n\r\n  useEffect(() => {\r\n    setStatus(props.status)\r\n  }, [props.status])\r\n\r\n  const activateEditMode = () => {\r\n    setEditMode(true)\r\n  }\r\n  const deactivateEditMode = () => {\r\n    setEditMode(false)\r\n    props.updateStatus(status)\r\n  }\r\n  const onStatusChange = (e) => {\r\n    setStatus(e.currentTarget.value)\r\n  }\r\n  return (\r\n    <div >\r\n      {editMode\r\n        ? <input onChange={onStatusChange} value={status} onBlur={deactivateEditMode} autoFocus />\r\n        : <span onDoubleClick={activateEditMode} >{props.status || 'no status'}</span>\r\n      }\r\n    </div>\r\n  );\r\n}\r\nexport default ProfileStatus;\r\n","import React from \"react\";\r\nimport { Preloader } from \"../../common/Preloader/Preloader\";\r\nimport s from \"./ProfileInfo.module.scss\";\r\nimport ProfileStatus from \"./ProfileStatus\";\r\n\r\nconst ProfileInfo = ({ profile, status, updateStatus, isOwner, savePhoto }) => {\r\n  if (!profile) {\r\n    return <Preloader />\r\n  }\r\n  const onMainPhotoSelected = (e) => {\r\nif(e.target.files.length){\r\n  savePhoto(e.target.files[0])\r\n}\r\n  }\r\n  return (\r\n    <div className={s.profileInfo}>\r\n      <div className={s.descriptionBlock}>\r\n        <p>Профиль {profile.fullName}, id: {profile.userId}</p>\r\n        <div><img src={profile.photos.small || \"https://binkor.ru/images/vopros/user_hover.png\"} className={s.mainPhoto} /></div>\r\n        {isOwner && <input type={'file'} onChange={onMainPhotoSelected} />}\r\n        <div className={s.descriptionBlock__aboutMe}>O себе: {profile.aboutMe || '-----'} </div>\r\n        <div className={s.descriptionBlock__status}><ProfileStatus status={status} updateStatus={updateStatus} /></div>\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n}\r\nexport default ProfileInfo;\r\n","import React from \"react\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport s from './Profile.module.scss'\r\n\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div className={s.profile}>\r\n            <ProfileInfo profile={props.profile} status={props.status}\r\n                updateStatus={props.updateStatus} isOwner={props.isOwner} savePhoto={props.savePhoto} />\r\n            <MyPostsContainer />\r\n        </div>\r\n    )\r\n}\r\nexport default Profile;\r\n\r\n","import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport { connect } from 'react-redux';\r\nimport { getUserProfile, getStatus, updateStatus, savePhoto } from '../../redux/profile-reducer';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { compose } from \"redux\";\r\nimport {\r\n    useLocation,\r\n    useNavigate,\r\n    useParams,\r\n    Navigate\r\n} from \"react-router-dom\";\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n    refreshProfile() {\r\n        let userId = this.props.router.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.userId\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n    componentDidMount() {\r\n        this.refreshProfile()\r\n    }\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.router.params.userId !== prevProps) {\r\n            this.refreshProfile()\r\n        }\r\n    }\r\n    render() {\r\n\r\n        return (\r\n            <Profile {...this.props} isOwner={!this.props.router.params.userId} savePhoto={this.props.savePhoto} />\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    userId: state.auth.userId,\r\n    isAuth: state.auth.isAuth,\r\n})\r\n\r\nexport default compose(withAuthRedirect, connect(mapStateToProps, { getUserProfile, getStatus, updateStatus, savePhoto }), withRouter)(ProfileContainer)\r\n\r\n\r\n\r\nfunction withRouter(Component) {\r\n    function ComponentWithRouterProp(props) {\r\n        let location = useLocation();\r\n        let navigate = useNavigate();\r\n        let params = useParams();\r\n        return (\r\n            <Component\r\n                {...props}\r\n                router={{ location, navigate, params }}\r\n            />\r\n        );\r\n    }\r\n\r\n    return ComponentWithRouterProp;\r\n}\r\n// export default compose(connect(mapStateToProps, { getUserProfile }), withRouter, withAuthRedirect)(ProfileContainer)\r\n\r\n\r\n// let AuthRedirectComponent = withAuthRedirect(ProfileContainer)\r\n\r\n\r\n// export default connect(mapStateToProps, { getUserProfile })(withRouter(AuthRedirectComponent));\r\n\r\n"],"sourceRoot":""}