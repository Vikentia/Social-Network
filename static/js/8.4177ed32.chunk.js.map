{"version":3,"sources":["components/common/Pagination/Pagination.module.scss","components/Users/Users.module.scss","components/common/Pagination/Pagination.tsx","components/Users/User.tsx","components/Users/UsersSearchForm.tsx","components/Users/Users.tsx","redux/users-selectors.ts","components/Users/UsersContainer.tsx"],"names":["module","exports","Pagination","totalItemsCount","pageSize","currentPage","onPageChanged","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","React","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","onClick","filter","p","map","className","s","selectedPage","e","User","user","followingInProgress","unfollow","follow","userProfile","userProfile__photo","to","id","src","photos","small","userPhoto","userProfile__button","followed","disabled","some","userProfile__info","name","status","validate","values","UsersSearchForm","onFilterChanged","initialValues","term","friend","onSubmit","setSubmitting","isSubmitting","type","as","value","memo","Users","totalUsersCount","users","props","getUsers","createSelector","state","usersPage","getPageSize","getTotalUsersCount","getCurrentPage","getFollowingInProgress","getIsFetching","isFetching","getUsersFilter","UsersContainer","pageNumber","setCurrentPage","this","Preloader","Component","compose","connect","actions","requestUsers"],"mappings":"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","file":"static/js/8.4177ed32.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"selectedPage\":\"Pagination_selectedPage__1rooW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"Users_userPhoto__2dm5t\",\"userProfile\":\"Users_userProfile__1S7Vo\",\"userProfile__photo\":\"Users_userProfile__photo__1mEXt\",\"userProfile__button\":\"Users_userProfile__button__2CHXZ\",\"userProfile__info\":\"Users_userProfile__info__23TpK\"};","import React from \"react\";\r\nimport s from \"./Pagination.module.scss\";\r\n\r\ntype PropsType = {\r\n    totalItemsCount: number;\r\n    pageSize: number;\r\n    currentPage: number;\r\n    onPageChanged: (pageNumber: number) => void;\r\n    portionSize?: number;\r\n};\r\n\r\nconst Pagination: React.FC<PropsType> = ({\r\n    totalItemsCount,\r\n    pageSize,\r\n    currentPage,\r\n    onPageChanged,\r\n    portionSize = 10,\r\n}) => {\r\n    let pagesCount = Math.ceil(totalItemsCount / pageSize);\r\n\r\n    let pages: number[] = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    let portionCount = Math.ceil(pagesCount / portionSize);\r\n    let [portionNumber, setPortionNumber] = React.useState(1);\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n    let rightPortionPageNumber = portionNumber * portionSize;\r\n\r\n    return (\r\n        <div>\r\n            {portionNumber > 1 && (\r\n                <button\r\n                    onClick={() => {\r\n                        setPortionNumber(portionNumber - 1);\r\n                    }}\r\n                >\r\n                    «\r\n                </button>\r\n            )}\r\n\r\n            {pages\r\n                .filter(\r\n                    (p) =>\r\n                        p >= leftPortionPageNumber &&\r\n                        p <= rightPortionPageNumber\r\n                )\r\n                .map((p) => {\r\n                    return (\r\n                        <span\r\n                            className={\r\n                                (currentPage === p && s.selectedPage) || \"\"\r\n                            }\r\n                            key={p}\r\n                            onClick={(e) => onPageChanged(p)}\r\n                        >\r\n                            {p}\r\n                        </span>\r\n                    );\r\n                })}\r\n            {portionCount > portionNumber && (\r\n                <button\r\n                    onClick={() => {\r\n                        setPortionNumber(portionNumber + 1);\r\n                    }}\r\n                >\r\n                    »\r\n                </button>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Pagination;\r\n","import React from \"react\";\r\nimport s from \"./Users.module.scss\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { UserType } from \"../../types/types\";\r\n\r\ntype PropsType = {\r\n    user: UserType;\r\n    followingInProgress: Array<number>;\r\n    unfollow: (userId: number) => void;\r\n    follow: (userId: number) => void;\r\n};\r\n\r\nconst User: React.FC<PropsType> = ({\r\n    user,\r\n    followingInProgress,\r\n    unfollow,\r\n    follow,\r\n}) => {\r\n    return (\r\n        <div>\r\n            <div className={s.userProfile} key={user.id}>\r\n                <div className={s.userProfile__photo}>\r\n                    <NavLink to={\"/profile/\" + user.id}>\r\n                        <img\r\n                            src={\r\n                                user.photos.small ||\r\n                                \"https://binkor.ru/images/vopros/user_hover.png\"\r\n                            }\r\n                            className={s.userPhoto}\r\n                        />\r\n                    </NavLink>\r\n                </div>\r\n                <div className={s.userProfile__button}>\r\n                    {user.followed ? (\r\n                        <button\r\n                            disabled={followingInProgress.some(\r\n                                (id) => id === user.id\r\n                            )}\r\n                            onClick={() => {\r\n                                unfollow(user.id);\r\n                            }}\r\n                        >\r\n                            Unfollow\r\n                        </button>\r\n                    ) : (\r\n                        <button\r\n                            disabled={followingInProgress.some(\r\n                                (id) => id === user.id\r\n                            )}\r\n                            onClick={() => {\r\n                                follow(user.id);\r\n                            }}\r\n                        >\r\n                            Follow\r\n                        </button>\r\n                    )}\r\n                </div>\r\n\r\n                <div className={s.userProfile__info}>\r\n                    <div>{user.name}</div>\r\n                    <div>{user.status}</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default User;\r\n","import { Field, Form, Formik } from \"formik\";\r\nimport React from \"react\";\r\nimport { FilterType } from \"../../redux/users-reducer\";\r\n\r\ntype PropsType = {\r\n    onFilterChanged: (filter: FilterType) => void;\r\n};\r\ntype FormType = {\r\n    term: string;\r\n    friend: \"true\" | \"false\" | \"null\";\r\n};\r\n\r\nconst validate = (values: any) => {\r\n    const errors = {};\r\n    return errors;\r\n};\r\n\r\nconst UsersSearchForm: React.FC<PropsType> = ({ onFilterChanged }) => {\r\n    const submit = (\r\n        values: FilterType,\r\n        { setSubmitting }: { setSubmitting: (isSubmitting: boolean) => void }\r\n    ) => {\r\n        onFilterChanged(values);\r\n        setSubmitting(false);\r\n    };\r\n    return (\r\n        <div>\r\n            <Formik\r\n                initialValues={{ term: \"\", friend: null }}\r\n                validate={validate}\r\n                onSubmit={submit}\r\n            >\r\n                {({ isSubmitting }) => (\r\n                    <Form>\r\n                        <Field type=\"text\" name=\"term\" />\r\n                        <Field name=\"friend\" as=\"select\">\r\n                            <option value=\"null\">All</option>\r\n                            <option value=\"true\">Only followed</option>\r\n                            <option value=\"false\">Only unfollowed</option>\r\n                        </Field>\r\n                        <button type=\"submit\" disabled={isSubmitting}>\r\n                            Find\r\n                        </button>\r\n                    </Form>\r\n                )}\r\n            </Formik>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default React.memo(UsersSearchForm);\r\n\r\n// const submit = (\r\n//     values: FormType,\r\n//     { setSubmitting }: { setSubmitting: (isSubmitting: boolean) => void }\r\n// ) =>\r\n//     {\r\n//         const filter: FilterType = {\r\n//             term: values.term,\r\n//             friend:\r\n//                 values.friend === \"null\"\r\n//                     ? null\r\n//                     : values.friend === \"true\"\r\n//                     ? true\r\n//                     : false,\r\n//         };\r\n\r\n//         onFilterChanged(filter);\r\n//         setSubmitting(false);\r\n//     };\r\n","import React from \"react\";\r\nimport { FilterType } from \"../../redux/users-reducer\";\r\nimport { UserType } from \"../../types/types\";\r\nimport Pagination from \"../common/Pagination/Pagination\";\r\nimport User from \"./User\";\r\nimport UsersSearchForm from \"./UsersSearchForm\";\r\n\r\ntype PropsType = {\r\n    totalUsersCount: number;\r\n    onPageChanged: (pageNumber: number) => void;\r\n    onFilterChanged: (filter: FilterType) => void;\r\n    pageSize: number;\r\n    users: Array<UserType>;\r\n    currentPage: number;\r\n    followingInProgress: number[];\r\n    unfollow: (id: number) => void;\r\n    follow: (id: number) => void;\r\n};\r\n\r\nconst Users: React.FC<PropsType> = ({\r\n    totalUsersCount,\r\n    onPageChanged,\r\n    pageSize,\r\n    users,\r\n    currentPage,\r\n    followingInProgress,\r\n    unfollow,\r\n    follow,\r\n    ...props\r\n}) => {\r\n    return (\r\n        <div>\r\n            <div>\r\n                <Pagination\r\n                    currentPage={currentPage}\r\n                    onPageChanged={onPageChanged}\r\n                    totalItemsCount={totalUsersCount}\r\n                    pageSize={pageSize}\r\n                />\r\n            </div>\r\n            <div>\r\n                <UsersSearchForm onFilterChanged={props.onFilterChanged}/>\r\n            </div>\r\n            {users.map((user) => (\r\n                <User\r\n                    key={user.id}\r\n                    user={user}\r\n                    followingInProgress={followingInProgress}\r\n                    unfollow={unfollow}\r\n                    follow={follow}\r\n                />\r\n            ))}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Users;\r\n","import { createSelector } from 'reselect'\r\nimport { AppStateType } from './redux-store'\r\n\r\nconst getUsersSel = (state: AppStateType) => {\r\n    return state.usersPage.users\r\n}\r\nexport const getUsers = createSelector(getUsersSel, (users) => {\r\n    return users\r\n    // return users.filter(u => true)\r\n})\r\nexport const getPageSize = (state: AppStateType) => {\r\n    return state.usersPage.pageSize\r\n}\r\nexport const getTotalUsersCount = (state: AppStateType) => {\r\n    return state.usersPage.totalUsersCount\r\n}\r\nexport const getCurrentPage = (state: AppStateType) => {\r\n    return state.usersPage.currentPage\r\n}\r\nexport const getFollowingInProgress = (state: AppStateType) => {\r\n    return state.usersPage.followingInProgress\r\n}\r\nexport const getIsFetching = (state: AppStateType) => {\r\n    return state.usersPage.isFetching\r\n}\r\nexport const getUsersFilter = (state: AppStateType) => {\r\n    return state.usersPage.filter\r\n}","import React from \"react\";\r\nimport Users from \"./Users\";\r\nimport { connect } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\nimport { Preloader } from \"../common/Preloader/Preloader\";\r\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\r\nimport {\r\n    getUsers,\r\n    getPageSize,\r\n    getTotalUsersCount,\r\n    getCurrentPage,\r\n    getFollowingInProgress,\r\n    getIsFetching,\r\n    getUsersFilter,\r\n} from \"../../redux/users-selectors\";\r\nimport {\r\n    actions,\r\n    requestUsers,\r\n    follow,\r\n    unfollow,\r\n    FilterType,\r\n} from \"../../redux/users-reducer\";\r\nimport { UserType } from \"../../types/types\";\r\nimport { AppStateType } from \"../../redux/redux-store\";\r\ntype MapStatePropsType = {\r\n    currentPage: number;\r\n    pageSize: number;\r\n    isFetching: boolean;\r\n    totalUsersCount: number;\r\n    users: Array<UserType>;\r\n    followingInProgress: Array<number>;\r\n    filter: FilterType;\r\n};\r\ntype MapDispatchPropsType = {\r\n    unfollow: (id: number) => void;\r\n    follow: (id: number) => void;\r\n    getUsers: (currentPage: number, pageSize: number, filter: FilterType) => void;\r\n    setCurrentPage: (pageNumber: number) => void;\r\n};\r\ntype OwnPropsType = {};\r\ntype PropsType = MapStatePropsType & MapDispatchPropsType & OwnPropsType;\r\n\r\nclass UsersContainer extends React.Component<PropsType> {\r\n    componentDidMount() {\r\n        const { currentPage, pageSize,filter } = this.props;\r\n        this.props.getUsers(currentPage, pageSize, filter);\r\n    }\r\n\r\n    onPageChanged = (pageNumber: number) => {\r\n        const { pageSize, filter } = this.props;\r\n        this.props.setCurrentPage(pageNumber);\r\n        this.props.getUsers(pageNumber, pageSize, filter);\r\n    };\r\n    onFilterChanged = (filter: FilterType) => {\r\n        const { pageSize} = this.props;\r\n        this.props.getUsers(1, pageSize, filter);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                {this.props.isFetching && <Preloader />}\r\n                <Users\r\n                    pageSize={this.props.pageSize}\r\n                    totalUsersCount={this.props.totalUsersCount}\r\n                    currentPage={this.props.currentPage}\r\n                    users={this.props.users}\r\n                    onPageChanged={this.onPageChanged}\r\n                    onFilterChanged={this.onFilterChanged}\r\n                    followingInProgress={this.props.followingInProgress}\r\n                    follow={this.props.follow}\r\n                    unfollow={this.props.unfollow}\r\n                />\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\n// let mapStateToProps = (state) => {\r\n//     return {\r\n//         users: state.usersPage.users,\r\n//         pageSize: state.usersPage.pageSize,\r\n//         totalUsersCount: state.usersPage.totalUsersCount,\r\n//         currentPage: state.usersPage.currentPage,\r\n//         followingInProgress: state.usersPage.followingInProgress,\r\n//     };\r\n// };\r\n\r\nlet mapStateToProps = (state: AppStateType): MapStatePropsType => {\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        followingInProgress: getFollowingInProgress(state),\r\n        isFetching: getIsFetching(state),\r\n        filter: getUsersFilter(state),\r\n    };\r\n};\r\nexport default compose(\r\n    // withAuthRedirect,\r\n    connect<\r\n        MapStatePropsType,\r\n        MapDispatchPropsType,\r\n        OwnPropsType,\r\n        AppStateType\r\n    >(mapStateToProps, {\r\n        setCurrentPage: actions.setCurrentPage,\r\n        getUsers: requestUsers,\r\n        follow,\r\n        unfollow,\r\n    })\r\n)(UsersContainer);\r\n"],"sourceRoot":""}