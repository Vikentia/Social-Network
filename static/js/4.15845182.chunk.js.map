{"version":3,"sources":["hoc/withAuthRedirect.tsx","components/Dialogs/Dialogs.module.scss","components/Dialogs/Message/Message.tsx","components/Dialogs/Dialog/Dialog.tsx","components/Dialogs/Dialogs.tsx","components/Dialogs/DialogsContainer.tsx"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","connect","props","restProps","to","module","exports","Message","message","Dialog","id","name","maxLength100","maxLengthCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","createField","required","Textarea","Dialogs","dialogsPage","dialogsElements","dialogs","map","dialog","messagesElements","messages","mess","className","s","dialogs__items","values","sendMessage","newMessageBody","compose","actions","sendMessageCreater"],"mappings":"gMAUIA,EAA6B,SAACC,GAAD,MAC5B,CAAEC,OAAQD,EAAME,KAAKD,SAEnB,SAASE,EACZC,GAoBA,OAVqCC,YAMjCN,EACA,GAPiCM,EARiC,SAClEC,GAEA,IAAML,EAAyBK,EAAzBL,OAAWM,EAAjB,YAA+BD,EAA/B,GACA,OAAKL,EACE,cAACG,EAAD,eAAgBG,IADH,cAAC,IAAD,CAAUC,GAAG,gB,oBCnBzCC,EAAOC,QAAU,CAAC,QAAU,yBAAyB,cAAgB,iC,kECWtDC,EAPqB,SAACL,GACjC,OAAO,8BACH,8BAAMA,EAAMM,a,QCQLC,EARqB,SAACP,GACjC,OACI,8BACI,eAAC,IAAD,CAASE,GAAI,YAAcF,EAAMQ,GAAjC,cAAuCR,EAAMS,KAA7C,U,4CCkCNC,EAAeC,YAAiB,KA0BhCC,EAAsBC,YAAoC,CAAEC,KAAM,wBAA5CD,EAhBxB,SAACb,GACD,OACI,sBAAMe,SAAUf,EAAMgB,aAAtB,SACI,gCACKC,YACG,qBACA,iBACA,CAACC,IAAUR,GACXS,KAEJ,kDASDC,EAvDyB,SAACpB,GACrC,IAAIN,EAAQM,EAAMqB,YAEdC,EAAkB5B,EAAM6B,QAAQC,KAAI,SAACC,GAAD,OACpC,cAAC,EAAD,CAAwBjB,GAAIiB,EAAOjB,GAAIC,KAAMgB,EAAOhB,MAAvCgB,EAAOjB,OAEpBkB,EAAmBhC,EAAMiC,SAASH,KAAI,SAACI,GAAD,OACtC,cAAC,EAAD,CAAuBtB,QAASsB,EAAKtB,SAAvBsB,EAAKpB,OAOvB,OACI,sBAAKqB,UAAWC,IAAEP,QAAlB,UACI,qBAAKM,UAAWC,IAAEC,eAAlB,SAAmCT,IAEnC,sBAAKO,UAAWC,IAAEH,SAAlB,UACI,8BAAMD,IACN,cAACd,EAAD,CAAqBG,SAVb,SAACiB,GACjBhC,EAAMiC,YAAYD,EAAOE,0B,0BCdlBC,sBAA6BpC,aANtB,SAACL,GACnB,MAAO,CACH2B,YAAa3B,EAAM2B,eAI0C,CAACY,YAAYG,IAAQC,qBAAqBxC,IAAhGsC,CAAkHf","file":"static/js/4.15845182.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { AppStateType } from \"../redux/redux-store\";\r\n\r\ntype MapPropsType = {\r\n    isAuth: boolean;\r\n};\r\ntype DispatchPropsType = {};\r\n\r\nlet mapStateToPropsForRedirect = (state: AppStateType) =>\r\n    ({ isAuth: state.auth.isAuth } as MapPropsType);\r\n\r\nexport function withAuthRedirect<WCP extends object>(\r\n    Component: React.ComponentType<WCP>\r\n) {\r\n    const RedirectComponent: React.FC<MapPropsType & DispatchPropsType> = (\r\n        props\r\n    ) => {\r\n        let { isAuth, ...restProps } = props;\r\n        if (!isAuth) return <Navigate to=\"/login\" />;\r\n        return <Component {...(restProps as WCP)} />;\r\n    };\r\n\r\n    let ConnectedAuthRedirectComponent = connect<\r\n        MapPropsType,\r\n        DispatchPropsType,\r\n        WCP,\r\n        AppStateType\r\n    >(\r\n        mapStateToPropsForRedirect,\r\n        {}\r\n    )(RedirectComponent);\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__1hcii\",\"dialog_active\":\"Dialogs_dialog_active__2WuLP\"};","import React from \"react\";\r\n\r\ntype PropsType = {\r\n    message: string   \r\n}\r\nconst Message:React.FC<PropsType> = (props)=> {\r\n    return <div >\r\n        <div>{props.message}</div>\r\n    </div>\r\n}\r\n\r\n\r\nexport default Message;\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\ntype PropsType = {\r\n    id: number;\r\n    name: string;\r\n};\r\nconst Dialog: React.FC<PropsType> = (props) => {\r\n    return (\r\n        <div>\r\n            <NavLink to={\"/dialogs/\" + props.id}> {props.name} </NavLink>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Dialog;\r\n","import React from \"react\";\r\nimport Message from \"./Message/Message\";\r\nimport Dialog from \"./Dialog/Dialog\";\r\nimport s from \"./Dialogs.module.scss\";\r\nimport { Field, InjectedFormProps, reduxForm } from \"redux-form\";\r\nimport { Textarea, createField } from \"../common/FormsControls/FormsControls\";\r\nimport { required, maxLengthCreator } from \"../../utils/validators\";\r\nimport { InitialStateType } from \"../../redux/dialogs-reducer\";\r\nimport { LoginFormValuesType } from \"../Login/LoginPage\";\r\n\r\ntype OwnPropsType = {\r\n    dialogsPage: InitialStateType;\r\n    sendMessage: (messageText: string) => void;\r\n};\r\ntype NewMessageFormValuesType = {\r\n    newMessageBody: string;\r\n};\r\n\r\nconst Dialogs: React.FC<OwnPropsType> = (props) => {\r\n    let state = props.dialogsPage;\r\n\r\n    let dialogsElements = state.dialogs.map((dialog) => (\r\n        <Dialog key={dialog.id} id={dialog.id} name={dialog.name} />\r\n    ));\r\n    let messagesElements = state.messages.map((mess) => (\r\n        <Message key={mess.id} message={mess.message} />\r\n    ));\r\n\r\n    let addNewMessage = (values: { newMessageBody: string }) => {\r\n        props.sendMessage(values.newMessageBody);\r\n    };\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogs__items}>{dialogsElements}</div>\r\n\r\n            <div className={s.messages}>\r\n                <div>{messagesElements}</div>\r\n                <AddMessageFormRedux onSubmit={addNewMessage} />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst maxLength100 = maxLengthCreator(100);\r\n\r\ntype NewMessageFormValuesKeysType = Extract<\r\n    keyof NewMessageFormValuesType,\r\n    string\r\n>;\r\ntype PropsType = {};\r\n\r\nconst AddMessageForm: React.FC<\r\n    InjectedFormProps<NewMessageFormValuesType, PropsType> & PropsType\r\n> = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                {createField<NewMessageFormValuesKeysType>(\r\n                    \"Enter your message\",\r\n                    \"newMessageBody\",\r\n                    [required, maxLength100],\r\n                    Textarea\r\n                )}\r\n                <button>Send</button>\r\n            </div>\r\n        </form>\r\n    );\r\n};\r\n\r\nconst AddMessageFormRedux = reduxForm<NewMessageFormValuesType>({ form: \"dialogAddMessageForm\" })(\r\n    AddMessageForm\r\n);\r\nexport default Dialogs;\r\n","import React from 'react'\r\nimport {compose} from \"redux\";\r\nimport Dialogs from './Dialogs';\r\nimport {actions } from \"../../redux/dialogs-reducer\";\r\nimport { connect } from 'react-redux'\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { AppStateType } from \"../../redux/redux-store\";\r\n\r\n\r\nlet mapStateToProps = (state: AppStateType) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n    }\r\n}\r\n\r\nexport default compose<React.ComponentType>(connect(mapStateToProps, {sendMessage:actions.sendMessageCreater}),withAuthRedirect)(Dialogs);\r\n\r\n"],"sourceRoot":""}